// GLSL STARTER CODE BY DANIEL S. BUCKSTEIN
//  -> IMAGE TAB (final)

//------------------------------------------------------------
// SHADERTOY MAIN

#define row vec4

row createRow(in float a, in float b, in float c, in float y, in sCoord resInv, in sCoord fragCoord) 
{
    row currentRow = (a * texture(iChannel0, (fragCoord + vec2(2.0, y)) * resInv) 
                    + b * texture(iChannel0, (fragCoord + vec2(1.0, y)) * resInv) 
                    + c * texture(iChannel0, (fragCoord + vec2(0.0, y)) * resInv)
        		    + b * texture(iChannel0, (fragCoord + vec2(-1.0, y)) * resInv) 
                    + a * texture(iChannel0, (fragCoord + vec2(-2.0, y)) * resInv));
    return currentRow;
}

// mainImage: process the current pixel (exactly one call per pixel)
//    fragColor: output final color for current pixel
//    fragCoord: input location of current pixel in image (in pixels)
void mainImage(out color4 fragColor, in sCoord fragCoord)
{
    // setup
    // test UV for input image
    sCoord uv = fragCoord / iChannelResolution[0].xy;
    
    // TESTING
    // set iChannel0 to 'Misc/Buffer A' and fetch sample
    //fragColor = texture(iChannel0, uv);
    
    sCoord resInv = 1.0 / iChannelResolution[0].xy;
    
    //float fraction = 1.0 / 16.0;
    
    float fraction_two = 1.0 / 256.0;
    
    row firstRow = createRow(1.0, 4.0, 6.0, 2.0, resInv, fragCoord);
    
    row secondRow = createRow(4.0, 16.0, 24.0, 1.0, resInv, fragCoord);
    
    row thirdRow = createRow(6.0, 24.0, 36.0, 0.0, resInv, fragCoord);
    
    row fourthRow = createRow(4.0, 16.0, 24.0, -1.0, resInv, fragCoord);
    
    row fifthRow = createRow(1.0, 4.0, 6.0, -2.0, resInv, fragCoord);
    
    /*
    fragColor = fraction * (1.0 * texture(iChannel0, (fragCoord + vec2(1.0, 1.0)) / iChannelResolution[0].xy) 
                            + 2.0 * texture(iChannel0, (fragCoord + vec2(0.0, 1.0)) / iChannelResolution[0].xy) 
                            + 1.0 * texture(iChannel0, (fragCoord + vec2(-1.0, 1.0)) / iChannelResolution[0].xy) 
                            + 2.0 * texture(iChannel0, (fragCoord + vec2(1.0, 0.0)) / iChannelResolution[0].xy) 
                            + 4.0 * texture(iChannel0, fragCoord / iChannelResolution[0].xy) 
                            + 2.0 * texture(iChannel0, (fragCoord + vec2(-1.0, 0.0)) / iChannelResolution[0].xy) 
                            + 1.0 * texture(iChannel0, (fragCoord + vec2(1.0, -1.0)) / iChannelResolution[0].xy)
                            + 2.0 * texture(iChannel0, (fragCoord + vec2(0.0, -1.0)) / iChannelResolution[0].xy) 
                            + 1.0 * texture(iChannel0, (fragCoord + vec2(-1.0, -1.0)) / iChannelResolution[0].xy));
    */
    
    fragColor = fraction_two * (firstRow + secondRow + thirdRow + fourthRow + fifthRow);
	
}